#pragma checksum "D:\Программирование\ASP.NET CORE\WebApplicationCarStore\WebApplicationCarStore\Views\AdminBackup\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0123df3d974db79ef3a1703e5d9ace011acb23e9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_AdminBackup_Index), @"mvc.1.0.view", @"/Views/AdminBackup/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Программирование\ASP.NET CORE\WebApplicationCarStore\WebApplicationCarStore\Views\_ViewImports.cshtml"
using WebApplicationCarStore;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Программирование\ASP.NET CORE\WebApplicationCarStore\WebApplicationCarStore\Views\_ViewImports.cshtml"
using WebApplicationCarStore.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0123df3d974db79ef3a1703e5d9ace011acb23e9", @"/Views/AdminBackup/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2918ba0cff33f9416b4d220778719a7223260cd5", @"/Views/_ViewImports.cshtml")]
    public class Views_AdminBackup_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Программирование\ASP.NET CORE\WebApplicationCarStore\WebApplicationCarStore\Views\AdminBackup\Index.cshtml"
  
    ViewData["Title"] = "Backups";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""content-header text-center"">
    <div class=""container"">
        <div class=""row mb-2"">
            <h1 class=""m-0"">Backups</h1>
        </div>
    </div>
</div>

<div class=""content"">
    <div class=""container"">
        <div class=""row"">
            <div class=""col-lg-6"">
                <div class=""card card-primary card-outline"">
                    <div class=""card-body"">
                        <h5 class=""card-title"">JSON backup</h5>
                        <p class=""card-text"">
                            <button id=""createButton"" class=""btn btn-primary"">Create</button>
                        </p>
                    </div>
                </div>
            </div>

            <div class=""col-lg-6"">
                <div class=""card card-primary card-outline"">
                    <div class=""card-body"">
                        <h5 class=""card-title"">Database</h5>
                        <p class=""card-text"">
                            <div class=""form-group"">
");
            WriteLiteral(@"                                <label>Backups</label>
                                <select id=""backups"" class=""form-control"">
                                   
                                </select>
                            </div>

                            <button id=""restoreButton"" class=""btn btn-primary"">Restore</button>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let backupsSelect = document.getElementById(""backups"");
    function getBackups() {
        fetch(""api/ApiBackups"")
            .then(res => res.json())
            .then(backups => {
                renderBackups(backups);
            })
            .catch(err => console.error(err))
    }
    function renderBackups(backups) {
        backupsSelect.innerHTML = '';
        for (var backup of backups) {
            let option = document.createElement(""option"");
            option.text = backup;
           ");
            WriteLiteral(@" backupsSelect.appendChild(option);
        }
    }
    document.getElementById(""createButton"").onclick = () => {
        fetch(""api/ApiStoreBackups"")
            .then(res => res.json())
            .then(backup => {
                console.log(backup);
                let option = document.createElement(""option"");
                option.text = backup;
                backupsSelect.appendChild(option);
            })
            .catch(err => console.error(err));
    };
    document.getElementById(""restoreButton"").onclick = () => {
        fetch(""api/ApiStoreBackups/"" + backupsSelect.options[backupsSelect.selectedIndex].text)
            .then(res => res.json())
            .then(backup => console.log(backup))
            .catch(err => console.error(err));
    }
    getBackups();
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
